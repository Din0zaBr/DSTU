import numpy as np
from TheoryOfInformation.sem6.two.main import main as new_main
def image_to_binary(pixel_array):
    """
    Преобразует массив пикселей в бинарный формат и кодирует его методом блочного кода.
    """
    # Преобразуем значения пикселей в бинарный вид (8 бит)
    binary_array = np.unpackbits(np.array(pixel_array, dtype=np.uint8), axis=-1)
    # Reshape binary array to have 8-bit chunks
    binary_array = binary_array.reshape(-1, 8)

    # Конвертируем каждый 8-битный чанк в строку
    hex_array = np.array([chunk for chunk in binary_array])
    # print(hex_array)
    #
    # # Преобразуем массив строк в одну длинную строку
    binary_string = ''.join(''.join(map(str, chunk)) for chunk in binary_array)
    # print(binary_string)
    # Преобразуем массив строк в одну длинную строку
    # print(binary_string)
    # TODO блочный код
    # Кодируем строку методом блочного кода и получаем кодированный текст
    # encoded_text = huffman_code(binary_string)
    # print()
    # return hex_array.transpose()

    Encoded_output_text = ['000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000',
           '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000',
           '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000',
           '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000',
           '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000',
           '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111',
           '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000',
           '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111',
           '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000',
           '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000',
           '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000',
           '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000',
           '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000',
           '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111',
           '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000',
           '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111',
           '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111',
           '000', '010', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111',
           '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000',
           '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010',
           '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111',
           '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000',
           '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '010',
           '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000',
           '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111',
           '000', '010', '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000',
           '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000',
           '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111',
           '000', '000', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '000', '000',
           '111', '000', '010', '000', '111', '000', '000', '000', '111', '000', '000', '000', '111', '000', '000',
           '000', '111', '000', '000', '000', '111', '000', '010', '000', '111', '000', '000', '000', '111', '000',
           '010', '000', '111', '000', '010', '000', '111', '000', '010', '000', '111', '000', '010']

    result = np.array([list(x) for x in Encoded_output_text])
    return result.transpose()


def main():
    encoded_text = image_to_binary(array)
    print(encoded_text)
    print("Encoded Text:", "".join("".join(x) for x in encoded_text))

    new_main()
    # 0,1 1,2
    per:str
    # узнать у матрицы H или G кол-во столбцов
    # делим текущую строку на k списков
    count_of_rows = len(matrix_for_block_code[0]) # кол-во столбцов у матрицы

    split_indices = np.linspace(0, len(binary_word), count_of_rows + 1, dtype=int)

    chunked_array = cast(np.ndarray[np.ndarray[str]], np.array([
        list(binary_word[start:end]) for start, end in zip(split_indices[:-1], split_indices[1:])
    ]))

    transposed_matrix = self._interleave_service.execute(
        chunked_array
    )

    # дальше матрица в encoded text
    # дальше декодируем

array = np.array(
    [[[21, 22, 17],
      [17, 18, 13],
      [25, 24, 19],
      [56, 52, 49],
      [56, 53, 48],
      [56, 53, 48]],

     [[24, 25, 20],
      [17, 18, 13],
      [21, 20, 15],
      [56, 52, 49],
      [55, 52, 47],
      [55, 52, 47]]])

main()
